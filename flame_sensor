#!/usr/bin/python
# coding=utf-8

import time
import board
import busio
import adafruit_ads1x15.ads1115 as ADS
from adafruit_ads1x15.analog_in import AnalogIn
import RPi.GPIO as GPIO

# Definitions for GPIO
GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)

# Create the I2C bus
i2c = busio.I2C(board.SCL, board.SDA)

# Create the ADC object using the I2C bus
ads = ADS.ADS1115(i2c)

# Create single-ended input on channels -> to read the analog signals
chan0 = AnalogIn(ads, ADS.P0)
chan1 = AnalogIn(ads, ADS.P1)
chan2 = AnalogIn(ads, ADS.P2)
chan3 = AnalogIn(ads, ADS.P3)

delayTime = 1
Digital_PIN = 24 # Pin 24
threshold = 0.20 # Depending on the environmental conditions 

# Read input -> continuous loop with query 
GPIO.setup(Digital_PIN, GPIO.IN, pull_up_down = GPIO.PUD_OFF) 

while True:
    # Current values are recorded
    analog = '%.2f' % chan0.voltage # Returns string
    float_analog = float(analog)
 
    # Output to console
    if float_analog < threshold:
        print ("Analog voltage value:", analog, "V unter 0.20, ", "Attention, fire detected!")
    else:
        print ("Analog voltage value:", analog, "V Ã¼ber 0,20 V, ", "Everything is fine :-)")
    print ("---------------------------------------")
 
    # Reset and delay
    button_pressed = False
    time.sleep(delayTime)
